-- MySQL Script generated by MySQL Workbench
-- Fri May 25 14:55:51 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Lost_and_Found
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Lost_and_Found
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Lost_and_Found` DEFAULT CHARACTER SET utf8 ;
USE `Lost_and_Found` ;

-- -----------------------------------------------------
-- Table `Lost_and_Found`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`users` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lost_and_Found`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`item` (
  `item_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `make/model` VARCHAR(45) NULL,
  `color` VARCHAR(20) NULL,
  `location` VARCHAR(100) NULL,
  `misc` VARCHAR(100) NULL,
  `solved` SET('yes', 'no') NOT NULL,
  PRIMARY KEY (`item_id`),
  UNIQUE INDEX `lost_item_id_UNIQUE` (`item_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lost_and_Found`.`found_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`found_item` (
  `found_item_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `item` VARCHAR(100) NOT NULL,
  `make/model` VARCHAR(100) NULL,
  `color` VARCHAR(100) NULL,
  `location` VARCHAR(100) NULL,
  `misc` VARCHAR(100) NULL,
  PRIMARY KEY (`found_item_id`),
  UNIQUE INDEX `found_item_id_UNIQUE` (`found_item_id` ASC),
  INDEX `user_id_idx` (`user_id` ASC),
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `Lost_and_Found`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lost_and_Found`.`unclaim_items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`unclaim_items` (
  `unclaim_items_id` INT UNSIGNED NOT NULL,
  `lost_item_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`unclaim_items_id`),
  UNIQUE INDEX `unclaim_items_id_UNIQUE` (`unclaim_items_id` ASC),
  UNIQUE INDEX `lost_item_id_UNIQUE` (`lost_item_id` ASC),
  CONSTRAINT `lost_item_id`
    FOREIGN KEY (`lost_item_id`)
    REFERENCES `Lost_and_Found`.`item` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lost_and_Found`.`items`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`items` (
  `items_id` INT UNSIGNED NOT NULL,
  `lost_item_id` INT UNSIGNED NOT NULL,
  `found_item_id` INT UNSIGNED NOT NULL,
  `user_lost_id` INT UNSIGNED NULL,
  `user_found_id` INT UNSIGNED NULL,
  PRIMARY KEY (`items_id`),
  UNIQUE INDEX `solved_items_id_UNIQUE` (`items_id` ASC),
  UNIQUE INDEX `lost_item_id_UNIQUE` (`lost_item_id` ASC),
  UNIQUE INDEX `found_item_id_UNIQUE` (`found_item_id` ASC),
  INDEX `user_found_id_idx` (`user_found_id` ASC),
  CONSTRAINT `lost_item_id`
    FOREIGN KEY (`lost_item_id`)
    REFERENCES `Lost_and_Found`.`item` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `found_item_id`
    FOREIGN KEY (`found_item_id`)
    REFERENCES `Lost_and_Found`.`found_item` (`found_item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_found_id`
    FOREIGN KEY (`user_found_id`)
    REFERENCES `Lost_and_Found`.`found_item` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lost_and_Found`.`timestamps`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`timestamps` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL);


-- -----------------------------------------------------
-- Table `Lost_and_Found`.`item_is_lost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`item_is_lost` (
  `lost_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `item_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`lost_id`),
  INDEX `user_id_idx` (`user_id` ASC),
  INDEX `item_id_idx` (`item_id` ASC),
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `Lost_and_Found`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `item_id`
    FOREIGN KEY (`item_id`)
    REFERENCES `Lost_and_Found`.`item` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Lost_and_Found`.`item_is_found`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Lost_and_Found`.`item_is_found` (
  `found_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `item_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`found_id`),
  INDEX `user_id_idx` (`user_id` ASC),
  INDEX `item_id_idx` (`item_id` ASC),
  CONSTRAINT `user_id0`
    FOREIGN KEY (`user_id`)
    REFERENCES `Lost_and_Found`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `item_id0`
    FOREIGN KEY (`item_id`)
    REFERENCES `Lost_and_Found`.`item` (`item_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
